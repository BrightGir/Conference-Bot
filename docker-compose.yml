version: '3.8'

services:
    db:
      image: postgres:14-alpine
      container_name: "bot-database"
      restart: unless-stopped
      environment:
        - POSTGRES_DB=${DB_NAME}
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
      # db_port - порт, на котором будет работать бд внутри docker
      ports:
      - '${DB_EXTERNAL_PORT}:${DB_PORT}'
      volumes: 
        - db_data:/var/lib/postgresql/data
    redis:
      image: redis:7-alpine
      container_name: "bot-redis"
      restart: unless-stopped
      ports:
        - '${REDIS_EXTERNAL_PORT}:${REDIS_PORT}'
      volumes:
        - redis_data:/data
    app:
      build: ./bot
      container_name: "telegram-bot"
      restart: on-failure
      depends_on:
        - db
        - redis
      environment:
        - BOT_NAME=${BOT_NAME}
        - BOT_KEY=${BOT_KEY}
        - DB_URL=${DB_URL}
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - DB_DRIVER_CLASS_NAME=${DB_DRIVER_CLASS_NAME}
        - HIBERNATE_DDL_AUTO=${HIBERNATE_DDL_AUTO}
        - HIBERNATE_DIALECT=${HIBERNATE_DIALECT}
        - DEBUG_SQL=${DEBUG_SQL}
        - ADMIN_TOKEN=${ADMIN_TOKEN}
        - REDIS_HOST=redis
        - REDIS_PORT=${REDIS_PORT}
        - REDIS_EXTERNAL_PORT=${REDIS_EXTERNAL_PORT}

volumes:
  db_data:
  redis_data: